#!/bin/bash
set -o noglob

readonly scriptDir="$([ "${BASH_SOURCE[0]}" ] && dirname -- "${BASH_SOURCE[0]}" || exit 3)"
[ -d "$scriptDir" ] || { echo >&2 "ERROR: Cannot determine script directory!"; exit 3; }
definitionDirspec="${scriptDir}/../etc"

SUDO=sudo; [ $EUID -eq 0 ] && SUDO=

printUsage()
{
    cat <<HELPTEXT
Guided wizard to install various common software that I use.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '-a|--all|DEFINITION-NAME|FILESPEC [...] [-?|-h|--help]'
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
    --all|-a)		shift
			IFS=$'\n'
			set -- $(find "$definitionDirspec" -type f -print | sort) "$@"
			;;
esac
if [ $# -eq 0 ]; then
    printUsage "$0" >&2
    exit 2
fi

IFS=' '
typeset -a toBeInstalledCommands=()

debInstall()
{
    typeset -a toBeInstalledPackages=()

    typeset -A installedPackages=()
    local package; while IFS=$'\n' read -r package
    do
	installedPackages["$package"]=t
    done < <(dpkg-package-list)
    if [ ${#installedPackages[@]} -eq 0 ]; then
	echo >&2 'ERROR: Failed to obtain installed deb package list.'
	exit 3
    fi

    typeset -A installedPpaRepositories=()
    local repo; while IFS=$'\n' read -r repo
    do
	installedPpaRepositories["$repo"]=t
    done < <(apt-list-repositories --ppa-only)


    local definition; for definition in "${debDefinitions[@]}"
    do
	[[ "$definition" =~ ^[[:space:]]*# ]] && continue
	set -- ${definition%%[	 ]#*}
	typeset -a commands=()
	typeset -a packages=()
	local package; for package
	do
	    case "$package" in
		ppa:*)	[ "${installedPpaRepositories["$package"]}" ] || commands+=("${SUDO}${SUDO:+ }add-apt-repository $package");;
		*)	[ "${installedPackages["$package"]}" ] || packages+=("$package");;
	    esac
	done

	if [ ${#packages[@]} -eq 0 ]; then
	    printf >&2 'Already installed: %s\n' "$definition"
	else
	    if offerTo --keep-prompt "Install ${definition}?"; then
		toBeInstalledCommands+=("${commands[@]}")
		toBeInstalledPackages+=("${packages[@]}")
	    fi
	fi
    done

    [ ${#toBeInstalledPackages[@]} -gt 0 ] && toBeInstalledCommands+=("${SUDO}${SUDO:+ }apt install ${toBeInstalledPackages[*]}")
}

pip3Install()
{
    :
}

npmInstall()
{
    :
}


typeset -a definitions=()
for definitionFile
do
    if [ -f "${definitionDirspec}/${definitionFile}" -a "${definitionFile:0:1}" != '.' ]; then
	definitionFilespec="${definitionDirspec}/${definitionFile}"
    elif [ -f "${definitionFile}" ]; then
	definitionFilespec="$definitionFile"
    else
	printf >&2 'ERROR: Definition "%s" does not exist.\n' "$definitionFile"
	exit 2
    fi

    readarray -O ${#definitions[@]} -t definitions < "$definitionFilespec"
done
[ ${#definitions[@]} -eq 0 ] && exit 1

typeset -a debDefinitions=()
typeset -a pip3Definitions=()
typeset -a npmDefinitions=()
for definition in "${definitions[@]}"
do
    case "$definition" in
	pip3:*)	pip3Definitions+=("$definition");;
	npm:*)	npmDefinitions+=("$definition");;
	*)	debDefinitions+=("$definition");;
    esac
done
[ ${#debDefinitions[@]} -gt 0 ] && debInstall
[ ${#pip3Definitions[@]} -gt 0 ] && pip3Install
[ ${#npmDefinitions[@]} -gt 0 ] && npmInstall

[ ${#toBeInstalledCommands[@]} -gt 0 ] && \
    printf '%s\n' "${toBeInstalledCommands[@]}"
